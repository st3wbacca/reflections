What happens when you initialize a repository? Why do you need to do it?

	The metadata for the git repository is created. You can't use git without it.

How is the staging area different from the working directory and the repository?
What value do you think it offers?

	The staging area is a workspace for files and directories to go before they
	are commit from working directory to the repository. You can compartmentalize
	the changes you are about the make.

How can you use the staging area to make sure you have one commit per logical
change?

	Just use git add to add what you think is one logical change. You can also use
	git diff --staged to see the changes to be made to the repository.
	
What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

	If you wanted to create a different exprimental version of the code while
	still maintaining the original code.
	
How do the diagrams help you visualize the branch structure?

	They show you how all the commits are related together and whether it is even
	reachable.
	
What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

	A new commit will be created with the current and the specified branches as
	parents. This will include all the changes from these branches in the current
	branch.
	
What are the pros and cons of Git's automatic merging vs. always doing merges
manually?